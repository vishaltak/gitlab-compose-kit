#!/bin/bash

set -e

if [[ -e .env ]]; then
  source .env
fi

if [[ -n "$SSH_TARGET_HOST" ]]; then
  echo "Using remote mode!"
  exec ssh -t \
    -o ControlMaster=auto \
    -o ControlPath=.sync.control \
    -o ControlPersist=5m \
    -o Port="${SSH_TARGET_PORT-22}" \
    "$SSH_TARGET_HOST" \
    "mkdir" -p "$SSH_TARGET_DIR" "&&" \
    "cd" "$SSH_TARGET_DIR" "&&" \
    exec ./scripts/proxy "$@"
fi

if [[ -z "$HOST" ]]; then
  case "$(uname -s)" in
    Linux)
      export HOST=$(hostname -I | cut -d' ' -f1)
      ;;

    Darwin)
      export HOST=$(ipconfig getifaddr en0 || ipconfig getifaddr en1 || ipconfig getifaddr en2)
      ;;
  esac
fi

if [[ -z "$HOST" ]]; then
  echo "Could not detect IP address. Consider setting this as an environment variable: export HOST=<my-ip-address>"
  exit 1
fi

export CUSTOM_CONFIG=$(cat gitlab.yml)
export CUSTOM_UID=$(id -u)
export CUSTOM_GID=$(id -g)

exec "$@"
