version: '2.2'

services:
  web:
    expose:
      - 8080
    depends_on:
      - postgres
      - postgres-replica
      - redis
      - redis-alt
      - gitaly
      - webpack
      - minio
    environment:
      RAILS_HOSTS: "web"
    command: [/scripts/startup/web.sh]

  sidekiq:
    depends_on:
      - postgres
      - postgres-replica
      - redis
      - redis-alt
      - gitaly
      - minio
    environment:
      SIDEKIQ_WORKERS: ${SIDEKIQ_WORKERS}
      SIDEKIQ_QUEUES: ${SIDEKIQ_QUEUES}
    command: [/scripts/startup/sidekiq.sh]

  spring:
    volumes:
      - src_gck:/gck
      - /tmp/.X11-unix:/tmp/.X11-unix
    depends_on:
      - postgres
      - redis
      - redis-alt
      - gitaly
      - webpack
      - minio
    environment:
      ENABLE_SPRING: 1
      SPEC_OPTS: "--format documentation"
      DISABLE_DATABASE_ENVIRONMENT_CHECK: "1" # disable https://github.com/rails/rails/blob/fc2684c9c012b95ce003cce22b378d5ea9ab56d3/activerecord/lib/active_record/tasks/database_tasks.rb#L58
      DISPLAY: ${DISPLAY}
      CHROME_HEADLESS: ${CHROME_HEADLESS}
      WEBDRIVER_HEADLESS: ${WEBDRIVER_HEADLESS}
      HISTCONTROL: "ignoreboth:erasedups"
      PGHOST: postgres
      PGUSER: postgres
      PGPASSWORD: password
    command: [cat]

  workhorse:
    environment:
      GITLAB_WORKHORSE_REVISION: ${GITLAB_WORKHORSE_REVISION}
      GITLAB_SHELL_REVISION: ${GITLAB_SHELL_REVISION}
      USE_TRACING: ${USE_TRACING}
    volumes:
      - src_gitlab_rails:/home/git/gitlab
      - src_gitlab_shell:/home/git/gitlab-shell
      - repositories:/data/repositories
      - shared:/data/shared
    expose:
      - 8181
      - 6060 # pprof server
    ports:
      - "${CUSTOM_WEB_PORT}:8181"
    depends_on:
      - gitaly
      - redis
      - redis-alt
      - web
      - minio
    working_dir: /home/git/gitlab/workhorse
    command: [/scripts/startup/workhorse.sh]

  sshd:
    environment:
      GITLAB_SHELL_REVISION: ${GITLAB_SHELL_REVISION}
      USE_TRACING: ${USE_TRACING}
    volumes:
      - src_gitlab_shell:/home/git/gitlab-shell
      - repositories:/data/repositories
    expose:
      - 2222
    ports:
      - "${CUSTOM_SSH_PORT}:2222"
    depends_on:
      - gitaly
      - redis
      - redis-alt
      - web
    command: [sudo, /scripts/startup/sshd.sh]

  webpack:
    volumes:
      - src_gitlab_rails:/home/git/gitlab
    environment:
      DEV_SERVER_PORT: ${CUSTOM_WEBPACK_PORT}
      DEV_SERVER_HOST: 0.0.0.0
      DEV_SERVER_ALLOWED_HOSTS: "webpack,${CUSTOM_HOSTNAME}"
      DEV_SERVER_LIVERELOAD: 'true'
      USE_WEBPACK_DEV: ${USE_WEBPACK_DEV}
      FORCE_WEBPACK_COMPILE: ${FORCE_WEBPACK_COMPILE}
      NODE_ENV: development
      GITLAB_RAILS_REVISION: ${GITLAB_RAILS_REVISION}
    ports:
      - "${CUSTOM_WEBPACK_PORT}:${CUSTOM_WEBPACK_PORT}"
    working_dir: /home/git/gitlab
    entrypoint: [/usr/local/bin/dumb-init, --]
    command: [/scripts/startup/webpack.sh]

  gitaly:
    volumes:
      - src_gitaly:/home/git/gitaly
      - src_gitlab_rails:/home/git/gitlab
      - src_gitlab_shell:/home/git/gitlab-shell
      - repositories:/data/repositories
    depends_on:
      - redis
    expose:
      - 9999
    environment:
      GITLAB_GITALY_REVISION: ${GITLAB_GITALY_REVISION}
      GITLAB_SHELL_REVISION: ${GITLAB_SHELL_REVISION}
      GITALY_GITLAB_SHELL_DIR: "/home/git/gitlab-shell"
      USE_TRACING: ${USE_TRACING}
    working_dir: /home/git/gitaly
    entrypoint: [/usr/local/bin/dumb-init, --, /scripts/entrypoint/gitlab-shell-env.sh]
    command: [/scripts/startup/gitaly.sh]

  pages:
    volumes:
      - home_git:/home/git
      - src_gitlab_pages:/home/git/go/src/gitlab.com/gitlab-org/gitlab-pages
      - shared:/data/shared
    depends_on:
      - redis
    expose:
      - 8989
    ports:
      - 8989
    environment:
      GITLAB_PAGES_REVISION: ${GITLAB_PAGES_REVISION}
    working_dir: /home/git/go/src/gitlab.com/gitlab-org/gitlab-pages
    entrypoint: [/usr/local/bin/dumb-init, --]
    command: [/scripts/startup/pages.sh]

  registry:
    image: registry:2.7.1
    volumes:
      - registry:/registry
      - home_git:/home/git
    environment:
      REGISTRY_LOG_LEVEL: info
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /registry
      REGISTRY_AUTH_TOKEN_REALM: http://localhost:3000/jwt/auth
      REGISTRY_AUTH_TOKEN_SERVICE: container_registry
      REGISTRY_AUTH_TOKEN_ISSUER: gitlab-issuer
      REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /home/git/registry-auth.crt
      REGISTRY_STORAGE_DELETE_ENABLED: 'true'
    expose:
      - 5000
    ports:
      - "${CUSTOM_REGISTRY_PORT}:5000"

  runner:
    image: gitlab/gitlab-runner
    environment:
      DOCKER_HOST: tcp://dind:2375
      CI_SERVER_URL: http://${CUSTOM_HOSTNAME}:3000/
      CI_SERVER_TOKEN: SHARED_RUNNER_TOKEN
      CLONE_URL: http://${CUSTOM_HOSTNAME}:3000/
      RUNNER_EXECUTOR: docker
      DOCKER_VOLUMES: '/var/run/docker.sock:/var/run/docker.sock'
      DOCKER_PRIVILEGED: 'true'
    depends_on:
      - dind
    command: [run-single]

  dind:
    image: docker:19.03-dind
    environment:
      DOCKER_TLS_CERTDIR: ''
    volumes:
      - docker:/var/lib/docker
    privileged: true
    expose:
      - 2375

  postgres:
    image: registry.gitlab.com/gitlab-org/gitlab-compose-kit/releases:postgres-${COMPOSE_KIT_REVISION}
    build:
      context: ./dockerfiles/postgres
    environment:
    - POSTGRES_PASSWORD=password
    volumes:
    - 'postgres:/var/lib/postgresql/data'
    expose:
    - 5432
    mem_limit: 256M

  postgres-replica:
    image: registry.gitlab.com/gitlab-org/gitlab-compose-kit/releases:postgres-${COMPOSE_KIT_REVISION}
    build:
      context: ./dockerfiles/postgres
    environment:
    - POSTGRES_PASSWORD=password
    - POSTGRES_REPLICATION_LAG=1000
    expose:
    - 5432
    depends_on:
    - postgres
    mem_limit: 256M
    command: /entrypoint/postgres-replica.sh
    restart: on-failure:3

  redis: &redis-default
    image: 'redis:alpine'
    expose:
    - 6379
    mem_limit: 128M

  redis-alt:
    <<: *redis-default
    image: 'redis:alpine'
    scale: ${ENABLE_REDIS_ALT_STORE}

  minio:
    image: minio/minio
    volumes:
    - object-storage:/export
    expose:
    - 9000
    ports:
      - 9001:9001
    environment:
      MINIO_ROOT_USER: TEST_KEY
      MINIO_ROOT_PASSWORD: TEST_SECRET
    entrypoint: /bin/sh -c
    command:
      - "mkdir -p /export/artifacts-bucket /export/lfs-bucket /export/uploads-bucket /export/pages-bucket && minio server /export --console-address :9001"

  cadvisor:
    image: gcr.io/google_containers/cadvisor:v0.36.0
    expose:
      - 8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    command: ["-store_container_labels=false", "-docker_only"]
    depends_on:
      - redis

volumes:
  postgres:
  registry:
  docker:
  cache:
  shared:
  repositories:
  object-storage:

  home_git:

  src_gck:
    driver: local
    driver_opts:
        type: $SRC_MOUNT_TYPE
        o: $SRC_MOUNT_OPTS
        device: "$SRC_MOUNT_PATH"

  src_data:
    driver: local
    driver_opts:
        type: $SRC_MOUNT_TYPE
        o: $SRC_MOUNT_OPTS
        device: "$SRC_MOUNT_PATH/data"

  src_gitlab_shell:
    driver: local
    driver_opts:
        type: $SRC_MOUNT_TYPE
        o: $SRC_MOUNT_OPTS
        device: "$SRC_MOUNT_PATH/gitlab-shell"

  src_gitlab_rails:
    driver: local
    driver_opts:
        type: $SRC_MOUNT_TYPE
        o: $SRC_MOUNT_OPTS
        device: "$SRC_MOUNT_PATH/gitlab-rails"

  src_gitlab_pages:
    driver: local
    driver_opts:
        type: $SRC_MOUNT_TYPE
        o: $SRC_MOUNT_OPTS
        device: "$SRC_MOUNT_PATH/gitlab-pages"

  src_gitaly:
    driver: local
    driver_opts:
        type: $SRC_MOUNT_TYPE
        o: $SRC_MOUNT_OPTS
        device: "$SRC_MOUNT_PATH/gitaly"
