version: '2.1'
services:
  unicorn: &web_server
    image: registry.gitlab.com/ayufan/gitlab-compose-kit/releases:${COMPOSE_KIT_REVISION}
    build:
      context: ./dockerfiles
      args:
        UID: ${CUSTOM_UID}
        GID: ${CUSTOM_GID}
    volumes:
      - ./data:/home/git:delegated
      - ./gitlab-shell:/home/git/gitlab-shell:cached
      - ./gitlab-rails:/home/git/gitlab:cached
      - ./gitaly:/home/git/gitaly:cached
      - cache:/data/cache
      - repositories:/data/repositories
      - shared:/data/shared
    expose:
      - 8080
    depends_on:
      - $USE_DB
      - redis
      - gitaly
      - webpack
      - minio
    environment:
      RAILS_ENV: ${RAILS_ENV}
      GITLAB_RAILS_REVISION: ${GITLAB_RAILS_REVISION}
      GITLAB_SHELL_REVISION: ${GITLAB_SHELL_REVISION}
      GITLAB_ENABLE_CHAOS_ENDPOINTS: 1 # https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/development/chaos_endpoints.md
      USE_TRACING: ${USE_TRACING}
      USE_WEB_SERVER: ${USE_WEB_SERVER}
      USE_RAILS: ${USE_RAILS}
      USE_DB: ${USE_DB}
      USE_WEBPACK_DEV: ${USE_WEBPACK_DEV}
      CUSTOM_HOSTNAME: ${CUSTOM_HOSTNAME}
      CUSTOM_CONFIG: ${CUSTOM_CONFIG}
      CUSTOM_WEB_PORT: ${CUSTOM_WEB_PORT}
      CUSTOM_SSH_PORT: ${CUSTOM_SSH_PORT}
      CUSTOM_REGISTRY_PORT: ${CUSTOM_REGISTRY_PORT}
      CUSTOM_WEB_CONFIG: ${CUSTOM_WEB_CONFIG}
      ENABLE_RBTRACE: "1"
    working_dir: /home/git/gitlab
    stdin_open: true
    tty: true
    entrypoint: [/usr/local/bin/dumb-init, --, /scripts/entrypoint/gitlab-rails-env.sh]
    command: [/scripts/startup/web.sh]
    restart: on-failure:1

  puma: *web_server
  thin: *web_server

  sidekiq:
    image: registry.gitlab.com/ayufan/gitlab-compose-kit/releases:${COMPOSE_KIT_REVISION}
    build:
      context: ./dockerfiles
      args:
        UID: ${CUSTOM_UID}
        GID: ${CUSTOM_GID}
    volumes:
      - ./data:/home/git:delegated
      - ./gitlab-shell:/home/git/gitlab-shell:cached
      - ./gitlab-rails:/home/git/gitlab:cached
      - ./gitaly:/home/git/gitaly:cached
      - cache:/data/cache
      - repositories:/data/repositories
      - shared:/data/shared
    depends_on:
      - $USE_DB
      - redis
      - gitaly
      - minio
    environment:
      RAILS_ENV: ${RAILS_ENV}
      GITLAB_RAILS_REVISION: ${GITLAB_RAILS_REVISION}
      GITLAB_SHELL_REVISION: ${GITLAB_SHELL_REVISION}
      USE_TRACING: ${USE_TRACING}
      USE_RAILS: ${USE_RAILS}
      USE_DB: ${USE_DB}
      USE_WEBPACK_DEV: ${USE_WEBPACK_DEV}
      USE_WEB_SERVER: ${USE_WEB_SERVER}
      CUSTOM_HOSTNAME: ${CUSTOM_HOSTNAME}
      CUSTOM_CONFIG: ${CUSTOM_CONFIG}
      CUSTOM_WEB_PORT: ${CUSTOM_WEB_PORT}
      CUSTOM_SSH_PORT: ${CUSTOM_SSH_PORT}
      CUSTOM_REGISTRY_PORT: ${CUSTOM_REGISTRY_PORT}
      ENABLE_RBTRACE: "1"
    working_dir: /home/git/gitlab
    entrypoint: [/usr/local/bin/dumb-init, --, /scripts/entrypoint/gitlab-rails-env.sh]
    command: [/scripts/startup/sidekiq.sh]
    restart: on-failure:1

  spring:
    image: registry.gitlab.com/ayufan/gitlab-compose-kit/releases:${COMPOSE_KIT_REVISION}
    build:
      context: ./dockerfiles
      args:
        UID: ${CUSTOM_UID}
        GID: ${CUSTOM_GID}
    volumes:
      - ./data:/home/git:delegated
      - ./gitlab-shell:/home/git/gitlab-shell:cached
      - ./gitlab-rails:/home/git/gitlab:cached
      - ./gitlab-workhorse:/home/git/gitlab-workhorse:cached
      - ./gitaly:/home/git/gitaly:cached
      - /tmp/.X11-unix:/tmp/.X11-unix
      - cache:/data/cache
      - repositories:/data/repositories
      - shared:/data/shared
    depends_on:
      - $USE_DB
      - redis
      - gitaly
      - webpack
      - minio
    environment:
      RAILS_ENV: ${RAILS_ENV}
      ENABLE_SPRING: "${ENABLE_SPRING}"
      SPEC_OPTS: "--format documentation"
      DISABLE_DATABASE_ENVIRONMENT_CHECK: "1" # disable https://github.com/rails/rails/blob/fc2684c9c012b95ce003cce22b378d5ea9ab56d3/activerecord/lib/active_record/tasks/database_tasks.rb#L58
      GITLAB_RAILS_REVISION: ${GITLAB_RAILS_REVISION}
      GITLAB_SHELL_REVISION: ${GITLAB_SHELL_REVISION}
      USE_RAILS: ${USE_RAILS}
      USE_DB: ${USE_DB}
      USE_WEBPACK_DEV: ${USE_WEBPACK_DEV}
      USE_WEB_SERVER: ${USE_WEB_SERVER}
      CUSTOM_HOSTNAME: ${CUSTOM_HOSTNAME}
      CUSTOM_CONFIG: ${CUSTOM_CONFIG}
      CUSTOM_WEB_PORT: ${CUSTOM_WEB_PORT}
      CUSTOM_SSH_PORT: ${CUSTOM_SSH_PORT}
      CUSTOM_REGISTRY_PORT: ${CUSTOM_REGISTRY_PORT}
      DISPLAY: ${DISPLAY}
      CHROME_HEADLESS: ${CHROME_HEADLESS}
      ENABLE_RBTRACE: "1"
    stdin_open: true
    tty: true
    working_dir: /home/git/gitlab
    entrypoint: [/usr/local/bin/dumb-init, --, /scripts/entrypoint/gitlab-rails-env.sh]
    command: [cat]

  workhorse:
    image: registry.gitlab.com/ayufan/gitlab-compose-kit/releases:${COMPOSE_KIT_REVISION}
    build:
      context: ./dockerfiles
      args:
        UID: ${CUSTOM_UID}
        GID: ${CUSTOM_GID}
    environment:
      GITLAB_WORKHORSE_REVISION: ${GITLAB_WORKHORSE_REVISION}
      GITLAB_SHELL_REVISION: ${GITLAB_SHELL_REVISION}
      USE_WEB_SERVER: ${USE_WEB_SERVER}
      USE_TRACING: ${USE_TRACING}
    volumes:
      - ./data:/home/git:delegated
      - ./gitlab-rails:/home/git/gitlab:cached
      - ./gitlab-shell:/home/git/gitlab-shell:cached
      - ./gitlab-workhorse:/home/git/gitlab-workhorse:cached
      - cache:/data/cache
      - repositories:/data/repositories
      - shared:/data/shared
    expose:
      - 8181
    ports:
      - "${CUSTOM_WEB_PORT}:8181"
    depends_on:
      - gitaly
      - redis
      - ${USE_WEB_SERVER}
      - minio
    working_dir: /home/git/gitlab-workhorse
    entrypoint: [/usr/local/bin/dumb-init, --, /scripts/entrypoint/gitlab-shell-env.sh]
    command: [/scripts/startup/workhorse.sh]
    restart: on-failure:3

  sshd:
    image: registry.gitlab.com/ayufan/gitlab-compose-kit/releases:${COMPOSE_KIT_REVISION}
    build:
      context: ./dockerfiles
      args:
        UID: ${CUSTOM_UID}
        GID: ${CUSTOM_GID}
    environment:
      GITLAB_SHELL_REVISION: ${GITLAB_SHELL_REVISION}
      USE_WEB_SERVER: ${USE_WEB_SERVER}
      USE_TRACING: ${USE_TRACING}
    volumes:
      - ./data:/home/git:delegated
      - ./gitlab-shell:/home/git/gitlab-shell:cached
      - repositories:/data/repositories
    expose:
      - 2222
    ports:
      - "${CUSTOM_SSH_PORT}:2222"
    depends_on:
      - gitaly
      - redis
      - ${USE_WEB_SERVER}
    working_dir: /home/git
    entrypoint: [/usr/local/bin/dumb-init, --, /scripts/entrypoint/gitlab-shell-env.sh]
    command: [sudo, /scripts/startup/sshd.sh]

  webpack:
    image: registry.gitlab.com/ayufan/gitlab-compose-kit/releases:${COMPOSE_KIT_REVISION}
    build:
      context: ./dockerfiles
      args:
        UID: ${CUSTOM_UID}
        GID: ${CUSTOM_GID}
    volumes:
      - ./data:/home/git:delegated
      - ./gitlab-rails:/home/git/gitlab:cached
      - cache:/data/cache
    environment:
      DEV_SERVER_PORT: 3808
      DEV_SERVER_HOST: 0.0.0.0
      DEV_SERVER_LIVERELOAD: 'true'
      USE_WEBPACK_DEV: ${USE_WEBPACK_DEV}
      NODE_ENV: development
      GITLAB_RAILS_REVISION: ${GITLAB_RAILS_REVISION}
    expose:
      - 3808
    working_dir: /home/git/gitlab
    entrypoint: [/usr/local/bin/dumb-init, --]
    command: [/scripts/startup/webpack.sh]
    restart: on-failure:3

  gitaly:
    image: registry.gitlab.com/ayufan/gitlab-compose-kit/releases:${COMPOSE_KIT_REVISION}
    build:
      context: ./dockerfiles
      args:
        UID: ${CUSTOM_UID}
        GID: ${CUSTOM_GID}
    volumes:
      - ./data:/home/git:delegated
      - ./gitaly:/home/git/gitaly:cached
      - ./gitlab-rails:/home/git/gitlab:cached
      - ./gitlab-shell:/home/git/gitlab-shell:cached
      - cache:/data/cache
      - repositories:/data/repositories
    depends_on:
      - redis
    expose:
      - 9999
    environment:
      GITLAB_GITALY_REVISION: ${GITLAB_GITALY_REVISION}
      GITLAB_SHELL_REVISION: ${GITLAB_SHELL_REVISION}
      USE_TRACING: ${USE_TRACING}
    working_dir: /home/git/gitaly
    entrypoint: [/usr/local/bin/dumb-init, --, /scripts/entrypoint/gitlab-shell-env.sh]
    command: [/scripts/startup/gitaly.sh]
    restart: on-failure:3

  pages:
    image: registry.gitlab.com/ayufan/gitlab-compose-kit/releases:${COMPOSE_KIT_REVISION}
    build:
      context: ./dockerfiles
      args:
        UID: ${CUSTOM_UID}
        GID: ${CUSTOM_GID}
    volumes:
      - ./data:/home/git:delegated
      - ./gitlab-pages:/home/git/go/src/gitlab.com/gitlab-org/gitlab-pages:cached
      - cache:/data/cache
      - shared:/data/shared
    depends_on:
      - redis
    expose:
      - 8989
    ports:
      - 8989
    environment:
      GITLAB_PAGES_REVISION: ${GITLAB_PAGES_REVISION}
    working_dir: /home/git/go/src/gitlab.com/gitlab-org/gitlab-pages
    entrypoint: [/usr/local/bin/dumb-init, --]
    command: [/scripts/startup/pages.sh]

  registry:
    image: registry:2.4.1
    volumes:
      - registry:/registry
      - ./data:/home/git:delegated
    environment:
      REGISTRY_LOG_LEVEL: info
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /registry
      REGISTRY_AUTH_TOKEN_REALM: http://localhost:3000/jwt/auth
      REGISTRY_AUTH_TOKEN_SERVICE: container_registry
      REGISTRY_AUTH_TOKEN_ISSUER: gitlab-issuer
      REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /home/git/registry-auth.crt
      REGISTRY_STORAGE_DELETE_ENABLED: 'true'
    expose:
      - 5000
    ports:
      - "${CUSTOM_REGISTRY_PORT}:5000"

  runner:
    image: gitlab/gitlab-runner:alpine-bleeding
    environment:
      DOCKER_HOST: tcp://dind:2375
      CI_SERVER_URL: http://${CUSTOM_HOSTNAME}:3000/
      CI_SERVER_TOKEN: SHARED_RUNNER_TOKEN
      CLONE_URL: http://${CUSTOM_HOSTNAME}:3000/
      RUNNER_EXECUTOR: docker
      DOCKER_VOLUMES: '/var/run/docker.sock:/var/run/docker.sock'
      DOCKER_PRIVILEGED: 'true'
    depends_on:
      - dind
    command: [run-single]

  dind:
    image: docker:dind
    volumes:
      - docker:/var/lib/docker
    privileged: true
    expose:
      - 2375

  postgres:
    image: 'postgres:9-alpine'
    environment:
    - POSTGRES_PASSWORD=password
    volumes:
    - 'postgres:/var/lib/postgresql/data'
    - './dockerfiles/postgres:/docker-entrypoint-initdb.d:ro'
    expose:
    - 5432
    mem_limit: 256M

  mysql2:
    image: 'mysql:5'
    environment:
    - MYSQL_ROOT_PASSWORD=password
    volumes:
    - 'mysql:/var/lib/mysql'
    expose:
    - 3306
    mem_limit: 256M

  redis:
    image: 'redis:alpine'
    volumes:
    - 'redis:/var/lib/redis'
    expose:
    - 6379
    mem_limit: 128M

  minio:
    image: minio/minio
    volumes:
    - object-storage:/export
    expose:
    - 9000
    environment:
      MINIO_ACCESS_KEY: TEST_KEY
      MINIO_SECRET_KEY: TEST_SECRET
    entrypoint: /bin/sh -c
    command:
      - "mkdir -p /export/artifacts-bucket /export/lfs-bucket /export/uploads-bucket && minio server /export"

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 9411:9411
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090/tcp
    environment:
      CONFIG: |
        global:
          scrape_interval: 15s
          evaluation_interval: 15s
        scrape_configs:
        - job_name: backend
          metrics_path: /metrics
          static_configs:
          - targets:
            - sidekiq:3807
            - gitaly:9236
            - workhorse:9229
        - job_name: web
          metrics_path: /-/metrics
          params:
            token: [${METRICS_TOKEN}]
          static_configs:
          - targets:
            - unicorn:8080
            - puma:8080
        - job_name: cadvisor
          metrics_path: /metrics
          static_configs:
          - targets:
            - cadvisor:8080
      CMD: |
        set -e
        echo "$$CONFIG"
        echo "$$CONFIG" > /etc/prometheus/prometheus.yml
        /bin/prometheus \
          --config.file=/etc/prometheus/prometheus.yml \
          --storage.tsdb.path=/prometheus
    volumes:
      - 'prometheus:/prometheus'
    entrypoint: []
    command: ["/bin/sh", "-c", 'eval "$$CMD"']
    depends_on:
      - cadvisor

  cadvisor:
    image: google/cadvisor:v0.33.0
    expose:
      - 8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    command: ["-store_container_labels=false", "-docker_only"]
    depends_on:
      - redis

volumes:
  redis:
  postgres:
  mysql:
  registry:
  docker:
  cache:
  shared:
  repositories:
  object-storage:
  prometheus:
