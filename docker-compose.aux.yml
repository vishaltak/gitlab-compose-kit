version: '2.2'

services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    expose:
      - 5775/udp # UDP: agent: accept zipkin.thrift over compact thrift protocol (deprecated, used by legacy clients only)
      - 6831/udp # UDP: agent: accept jaeger.thrift over compact thrift protocol
      - 6832/udp # UDP: agent: accept jaeger.thrift over binary thrift protocol
      - 5778/tcp # HTTP: agent: serve configs
      - 14268/tcp # HTTP: collector: accept jaeger.thrift directly from clients
      - 9411/tcp # HTTP: collector: Zipkin compatible endpoint (optional)
    ports:
      - 16686:16686/tcp # HTTP: query: serve frontend
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411

  pgadmin:
    image: registry.gitlab.com/gitlab-org/gitlab-compose-kit/releases:pgadmin-${COMPOSE_KIT_REVISION}
    build:
      context: ./dockerfiles/pgadmin
    expose:
      - 8080
    ports:
      - 9092:8080/tcp
    depends_on:
      - postgres
    volumes:
      - pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: gck@gck
      PGADMIN_DEFAULT_PASSWORD: gck
      PGADMIN_LISTEN_PORT: 8080
    restart: on-failure:1

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090/tcp
    environment:
      CONFIG: |
        global:
          scrape_interval: 15s
          evaluation_interval: 15s
        scrape_configs:
        - job_name: node
          metrics_path: /metrics
          static_configs:
          - targets:
            - node-exporter:9100
            labels:
              instance: web:8080
        - job_name: gitlab-rails
          metrics_path: /-/metrics
          params:
            token: [${METRICS_TOKEN}]
          static_configs:
          - targets:
            - web:8080            
        - job_name: gitlab-sidekiq
          metrics_path: /metrics
          static_configs:
          - targets:
            - sidekiq:3807
        - job_name: gitlab-workhorse
          metrics_path: /metrics
          static_configs:
          - targets:
            - workhorse:9229
        - job_name: gitaly
          metrics_path: /metrics
          static_configs:
          - targets:
            - gitaly:9236
        - job_name: cadvisor
          metrics_path: /metrics
          static_configs:
          - targets:
            - cadvisor:8080
        rule_files:
        - /data/prometheus/rules/*.rules
      CMD: |
        set -e
        echo "$$CONFIG"
        echo "$$CONFIG" > /etc/prometheus/prometheus.yml
        /bin/prometheus \
          --config.file=/etc/prometheus/prometheus.yml \
          --storage.tsdb.path=/prometheus
    volumes:
      - 'prometheus:/prometheus'
      - 'src_data:/data:ro'
    entrypoint: []
    command: ["/bin/sh", "-c", 'eval "$$CMD"']
    depends_on:
      - cadvisor

  node-exporter:
    image: prom/node-exporter
    hostname: web
    volumes:
      - '/:/rootfs:ro,rslave'
    command:
      - '--path.rootfs=/rootfs'

volumes:
  pgadmin:
  prometheus:
